=================================== Todo ====================================

Compare last two encrypt decrypt sessions
auto encrypt on exit getDesktop.open(..
Tools Settings
Backup Files.createLink(link, target);

=================================== Doing ===================================

Blanc Window in Mojave
User Action Wizzard

=============================== Don't forget ================================

Disable test messages					UI.test()
Update Languages on FAQ					GUIFX line 1070
Set version						nbproject/project.properties application.implementation.version=1.2.3
Set version on file:					VERSION
Set version on file:					VERSION2
Update file:						changelog
Update file:						manpage
Update file:						build.xml
							    MacOS:   finalcrypt-icon.icns   FinalCrypt_mac.zip
							    Windows: finalcrypt-icon.ico    FinalCrypt_win.zip
							    Linux:   finalcrypt-icon.png    FinalCrypt.zip
 
=================================== Done ====================================

FinalCrypt now supports 75 languages based on ISO639 standards implementation   
Improved language selection by mouse and keyboard (including quick jump keys)
Cleaner User Interface by removing 4/6 buttons using 2 multi-function buttons
Fixed FinalCrypt not Exiting (kept running in the background after close app)

============================= Source Committed ==============================


============================= Source Published ==============================


============================= Binaries Released =============================


================================= Comments =================================

~/jdk1.8.0_121/bin/javapackager -deploy -native exe -BsystemWide=true -BjvmOptions=-Xmx128m -BjvmOptions=-Xms128m -outdir packages -outfile FinalCrypt -srcdir dist -srcfiles finalcrypt.jar -appclass rdj.GUIFX -name FinalCrypt -title "FinalCrypt Demo"

//		    welcome();
/*
Linux:
${user.home}/.java/.userPrefs/FinalCrypt/prefs.xml

Windows:
regedit remove HKEY_CURRENT_USER\Software\JavaSoft\Prefs\/Final/Crypt

Mac OSX:
Mac OS X ~/Library/Preferences in multiple plist files.
Mac OS X uses the java.util.prefs.MacOSXPreferencesFactory class. See lists.apple.com/archives/java-dev/2010/Jul/msg00056.html
the java.util.prefs.MacOSXPreferencesFactory class should be in rt.jar in JDK 1.7 or later.
See hg.openjdk.java.net/macosx-port/macosx-port/jdk/file/â€¦ for the source code.
JDK 8 all the items in java.util.prefs:
*/

//	    ExecutorService executorservice = Executors.newSingleThreadExecutor();
//	    Runnable runnable = () ->
//	    {
//	    };
//	    executorservice.submit(runnable);
//	    try { executorservice.awaitTermination((long)(randomVal / 2), TimeUnit.MILLISECONDS); } catch (InterruptedException ex) {  }
//	    executorservice.shutdown();



	try
	{               
	    Task<Integer> myTask = new Task()
	    {
		@Override protected Integer call() throws Exception
		{
		    return 1;
		}
	    };

	    myTask.setOnRunning((succeesesEvent) ->   { /*log("Running...\r\n\r\n", true, true, false, false, false);*/ });
	    myTask.setOnSucceeded((succeededEvent) -> 
	    {
	    });

	    ExecutorService executorService = Executors.newFixedThreadPool(1); executorService.execute(myTask); executorService.shutdown();
        } catch (NumberFormatException e) { log("Error: checkUpdate: NumberFormatException\r\n", true, true, true, true, false); }
